@{
    ViewData["Title"] = "Index3";
}
<link rel="stylesheet" href="/css/Style_Index3.css">
<form method="post" asp-controller="Home" asp-action="CourbesPrecision">
    <div class="text-center">
        <h2>Choisir une méthode</h2>
        <span>Méthode：</span>
        <select id="methodeSelect" name="ml">
            <option value="RandomForest">Random Forest</option>
            <option value="svm">SVM</option>
            <option value="knn">KNN</option>
        </select>
        <button type="button" id="btnOK">OK</button><br><br>
    </div>

    <div id="optionsSection" style="display:none;" class="text-center">
        <h3>Paramètres</h3>
        <span>Hyperparamètre：</span>
        <select id="parametre" name="hp"></select>
        <!--
        <button type="button" id="btnSub">soumettre</button><br><br>
        -->
        <button type="submit" id="btnSub">soumettre</button><br><br>
    </div>
</form>
@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        document.getElementById('btnOK').addEventListener('click', function () {
            var optionsSection = document.getElementById('optionsSection');
            var choixMethode = document.getElementById('methodeSelect').value;

            // Afficher les paramètres correspondants selon la méthode choisie
            if (optionsSection.style.display === "none") {
                optionsSection.style.display = "block";
                // Définir les options de paramètres en fonction de la méthode choisie
                var parametreSelect = document.getElementById('parametre');
                parametreSelect.innerHTML = ''; // Effacer les options existantes

                if (choixMethode === "svm") {
                    // Ajouter les options de paramètres SVM
                    addOption(parametreSelect, "svm-C", "C");
                    addOption(parametreSelect, "svm-tol", "tol");
                    addOption(parametreSelect, "svm-max_iter", "max_iter");
                    addOption(parametreSelect, "svm-random_state", "random_state");

                } else if (choixMethode === "knn") {
                    // Ajouter les options de paramètres KNN
                    addOption(parametreSelect, "knn-n_neighbors", "n_neighbors");
                    addOption(parametreSelect, "knn-n_neighbors", "n_neighbors");
                } else if (choixMethode === "RandomForest") {
                    // Ajouter les options de paramètres Random Forest
                    addOption(parametreSelect, "rf-n_estimators", "n_estimators");
                    addOption(parametreSelect, "rf-max_depth", "max_depth");
                    addOption(parametreSelect, "rf-min_samples_leaf", "min_samples_leaf");
                    addOption(parametreSelect, "rf-max_sapmles", "max_samples");
                    addOption(parametreSelect, "rf-min_impurity_decrease", "min_impurtity_decrease");
                    addOption(parametreSelect, "rf-min_samples_split", "min_samples_split");
                    addOption(parametreSelect, "rf-min_weight_fraction_leaf", "min_weight_fraction_leaf");
                    addOption(parametreSelect, "rf-n_jobs", "n_jobs");
                    addOption(parametreSelect, "rf-random_state", "random_state");
                    addOption(parametreSelect, "rf-verbose", "verbose");
                    addOption(parametreSelect, "rf-ccp_alpha", "ccp_alpha");
                    addOption(parametreSelect, "rf-max_leaf_nodes", "max_leaf_nodes");
                } 
            } else {
                optionsSection.style.display = "none";
            }
        });

        // Fonction pour ajouter une option à un élément select
        function addOption(selectElement, value, text) {
            var option = document.createElement('option');
            option.value = value;
            option.text = text;
            selectElement.appendChild(option);
        }
    </script>
}
