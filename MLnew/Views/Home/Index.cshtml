@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home_Index</title>
    <link rel="stylesheet" href="/css/Style_Index.css">
    <!-- Font de mots -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Serif+Display:ital@0;1&display=swap" rel="stylesheet">
    <!-- jsPDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
</head>
<body>
    <div class="zip">
        <h1 class="Titre">Welcome</h1>

        <form method="post" enctype="multipart/form-data" asp-controller="Home" asp-action="Upload" target="uploadFrame">
            <div>
                <iframe id="uploadFrame" name="uploadFrame" style="display: none;"></iframe>
                <label for="files" class="label-upload">Choisissez les fichiers à télécharger (ZIP autorisés) :</label>
                <input id="fileInput" type="file" name="files" multiple>
            </div>
            <div>
                <button type="submit" id="okButton" class="btn-upload">OK</button>
            </div>
        </form>
    </div>

    <form id="optionsForm" class="option-form" method="post" asp-controller="Home" asp-action="ExecuteMachineLearningTasks">
        <div id="optionsSection" style="display:none;">
            <h1 class="sousTitre">Méthodes</h1>
            <div class="accordion-item" id="optionsAccordion">
                <h3 class="accordion-header" id="headingOption1">
                    <div class="d-flex align-items-center">
                        <input class="form-check-input me-2" type="checkbox" id="mainOption1" name="mainOption1" value="true">
                        <label for="mainOption1">Analytique</label>
                    </div>
                </h3>
            </div>

            <div class="accordion-item">
                <h3 class="accordion-header" id="headingOption2">
                    <div class="d-flex align-items-center">
                        <input class="form-check-input me-2" type="checkbox" id="mainOption2" name="mainOption2" value="true">
                        <label for="mainOption2">Random Forest</label>
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOption2" aria-expanded="false" aria-controls="collapseOption2">
                            <span class="visually-hidden">Toggle sub-options</span>
                        </button>
                    </div>
                </h3>
                <div id="collapseOption2" class="accordion-collapse collapse" aria-labelledby="headingOption2">
                    <div class="accordion-body">
                        <div class="explication">
                            <p><strong>Explication :</strong> Le "Random Forest" est un algorithme d'apprentissage automatique utilisé pour la classification et la régression. Il est basé sur la construction d'arbres de décision.</p>
                        </div>
                        <div>
                            <p><strong>Choose one or more sub-options:</strong></p>
                            <p>
                                <strong>1. n_estimators:</strong>
                                <input class="form-number" type="number" id="criterion-n_estimators-input" name="n_est" placeholder="Enter a positive integer value" min="1" max="100" value="33" required>
                            </p>
                            <p>
                                <strong>2. max_depth:</strong>
                                <input class="form-number" type="number" id="criterion-max_depth-input" name="max_d" placeholder="Enter a positive integer between 1 and 100" value="8" min="1" max="100" required>
                            </p>
                            <p>
                                <strong>3. min_samples_leaf:</strong>
                                <input class="form-number" type="number" id="criterion-min_samples_leaf-input" name="min_samples" placeholder="Enter a positive integer between 1 and 100" value="1" min="1" max="100" required>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="accordion-item">
                <h3 class="accordion-header" id="headingOption3">
                    <div class="d-flex align-items-center">
                        <input class="form-check-input me-2" type="checkbox" id="mainOption3" name="mainOption3" value="true">
                        <label for="mainOption3">SVM</label>
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOption3" aria-expanded="false" aria-controls="collapseOption3">
                            <span class="visually-hidden">Toggle sub-options</span>
                        </button>
                    </div>
                </h3>
                <div id="collapseOption3" class="accordion-collapse collapse" aria-labelledby="headingOption3">
                    <div class="accordion-body">
                        <p>
                            <strong>1. C:</strong>
                            <input class="form-number" type="number" id="C-input" name="C_input" placeholder="Enter a positive float value" step="0.1" value="1" required>
                        </p>
                        <p>
                            <strong>2. Kernel:</strong>
                            <select id="kernel-select" name="kernel_select" class="form-select">
                                <option value="linear">Linear</option>
                                <option value="poly">Polynomial</option>
                                <option value="rbf" selected>RBF</option>
                                <option value="sigmoid">Sigmoid</option>
                                <option value="precomputed">Precomputed</option>
                            </select>
                        </p>
                        <p>
                            <strong>3. Gamma:</strong>
                            <select id="gamma-select" name="gamma_select" class="form-select">
                                <option value="scale" selected>Scale</option>
                                <option value="auto">Auto</option>
                            </select>
                        </p>
                    </div>
                </div>
            </div>

            <div class="accordion-item">
                <h3 class="accordion-header" id="headingOptionKNN">
                    <div class="d-flex align-items-center">
                        <input class="form-check-input me-2" type="checkbox" id="mainOption4" name="mainOption4" value="true">
                        <label for="mainOption4">KNN</label>
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOptionKNN" aria-expanded="false" aria-controls="collapseOptionKNN">
                            <span class="visually-hidden">Toggle sub-options</span>
                        </button>
                    </div>
                </h3>
                <div id="collapseOptionKNN" class="accordion-collapse collapse" aria-labelledby="headingOptionKNN">
                    <div class="accordion-body">
                        <p>
                            <strong>1. n_neighbors:</strong>
                            <input class="form-number" type="number" id="n_neighbors-input" name="n_neighbors" value="5" min="1" max="100" required>
                        </p>
                        <p>
                            <strong>2. weights:</strong>
                            <select id="weights-select" name="weights" class="form-select">
                                <option value="uniform">Uniform</option>
                                <option value="distance">Distance</option>
                            </select>
                        </p>
                        <p>
                            <strong>3. metric:</strong>
                            <select id="metric-select" name="metric" class="form-select">
                                <option value="minkowski">Minkowski</option>
                                <option value="euclidean">Euclidean</option>
                                <option value="manhattan">Manhattan</option>
                            </select>
                        </p>
                    </div>
                </div>
            </div>

            <input type="submit" id="submit" value="submit" />
            <button type="button" id="generatePdfButton" class="btn-generate-pdf">Generate PDF</button>
        </div>
    </form>

    <script>
        document.getElementById('okButton').addEventListener('click', function (event) {
            var optionsSection = document.getElementById('optionsSection');
            if (optionsSection.style.display === "none") {
                optionsSection.style.display = "block";
            } else {
                optionsSection.style.display = "none";
            }
        });

        document.getElementById('generatePdfButton').addEventListener('click', function () {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            doc.setFontSize(16);
            doc.text("Machine Learning Parameters", 10, 10);
            doc.setFontSize(12);

            let yPos = 20;

            // Random Forest Parameters
            if (document.getElementById('mainOption2').checked) {
                doc.text("Random Forest:", 10, yPos);
                yPos += 10;
                doc.text(`n_estimators: ${document.getElementById('criterion-n_estimators-input').value}`, 20, yPos);
                yPos += 10;
                doc.text(`max_depth: ${document.getElementById('criterion-max_depth-input').value}`, 20, yPos);
                yPos += 10;
                doc.text(`min_samples_leaf: ${document.getElementById('criterion-min_samples_leaf-input').value}`, 20, yPos);
                yPos += 20;
            }

            // SVM Parameters
            if (document.getElementById('mainOption3').checked) {
                doc.text("SVM:", 10, yPos);
                yPos += 10;
                doc.text(`C: ${document.getElementById('C-input').value}`, 20, yPos);
                yPos += 10;
                doc.text(`Kernel: ${document.getElementById('kernel-select').value}`, 20, yPos);
                yPos += 10;
                doc.text(`Gamma: ${document.getElementById('gamma-select').value}`, 20, yPos);
                yPos += 20;
            }

            // KNN Parameters
            if (document.getElementById('mainOption4').checked) {
                doc.text("KNN:", 10, yPos);
                yPos += 10;
                doc.text(`n_neighbors: ${document.getElementById('n_neighbors-input').value}`, 20, yPos);
                yPos += 10;
                doc.text(`weights: ${document.getElementById('weights-select').value}`, 20, yPos);
                yPos += 10;
                doc.text(`metric: ${document.getElementById('metric-select').value}`, 20, yPos);
                yPos += 20;
            }

            doc.save("ML_Parameters.pdf");
        });

        // JavaScript pour activer/désactiver les sous-options en fonction des cases à cocher
        document.getElementById('mainOption2').addEventListener('change', function () {
            document.getElementById('collapseOption2').style.display = this.checked ? 'block' : 'none';
        });

        document.getElementById('mainOption3').addEventListener('change', function () {
            document.getElementById('collapseOption3').style.display = this.checked ? 'block' : 'none';
        });

        document.getElementById('mainOption4').addEventListener('change', function () {
            document.getElementById('collapseOptionKNN').style.display = this.checked ? 'block' : 'none';
        });
    </script>
</body>
</html>
